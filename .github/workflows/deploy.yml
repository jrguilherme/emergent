name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show tree (root)
        run: |
          pwd
          ls -la
          echo "---- frontend/ ----"
          ls -la frontend || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Check package.json (frontend)
        working-directory: frontend
        run: |
          if [ ! -f package.json ]; then
            echo "ERRO: frontend/package.json não encontrado"; exit 1
          fi
          echo "Conteúdo do package.json:"
          cat package.json

      # instala ignorando incompatibilidades de peer-deps (comum em projetos CRA/craco)
      - name: Install deps
        working-directory: frontend
        run: |
          npm install --legacy-peer-deps --no-audit --no-fund

      # alguns projetos com CRA falham em CI por warnings; desativa comportamento estrito
      - name: Build app
        working-directory: frontend
        env:
          CI: "false"
        run: |
          # se o script "build" não existir, falha de forma clara
          if ! jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            echo 'ERRO: "scripts.build" não definido em frontend/package.json'; exit 1
          fi
          npm run build

      - name: Ensure build output exists
        run: |
          if [ ! -f frontend/build/index.html ]; then
            echo "ERRO: frontend/build/index.html não encontrado após o build"; exit 1
          fi
          # SPA fallback (React Router)
          cp frontend/build/index.html frontend/build/404.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
